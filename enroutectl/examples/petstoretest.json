{
    "basePath": "/v2",
    "definitions": {
        "ApiResponse": {
            "properties": {
                "code": {
                    "format": "int32",
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Category": {
            "properties": {
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "Category"
            }
        },
        "Order": {
            "properties": {
                "complete": {
                    "type": "boolean"
                },
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "petId": {
                    "format": "int64",
                    "type": "integer"
                },
                "quantity": {
                    "format": "int32",
                    "type": "integer"
                },
                "shipDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "status": {
                    "description": "Order Status",
                    "enum": [
                        "placed",
                        "approved",
                        "delivered"
                    ],
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "Order"
            }
        },
        "Pet": {
            "properties": {
                "category": {
                    "$ref": "#/definitions/Category"
                },
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "example": "doggie",
                    "type": "string"
                },
                "photoUrls": {
                    "items": {
                        "type": "string",
                        "xml": {
                            "name": "photoUrl"
                        }
                    },
                    "type": "array",
                    "xml": {
                        "wrapped": true
                    }
                },
                "status": {
                    "description": "pet status in the store",
                    "enum": [
                        "available",
                        "pending",
                        "sold"
                    ],
                    "type": "string"
                },
                "tags": {
                    "items": {
                        "$ref": "#/definitions/Tag",
                        "xml": {
                            "name": "tag"
                        }
                    },
                    "type": "array",
                    "xml": {
                        "wrapped": true
                    }
                }
            },
            "required": [
                "name",
                "photoUrls"
            ],
            "type": "object",
            "xml": {
                "name": "Pet"
            }
        },
        "Tag": {
            "properties": {
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "Tag"
            }
        },
        "User": {
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "userStatus": {
                    "description": "User Status",
                    "format": "int32",
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "User"
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    },
    "host": "petstore.swagger.io",
    "info": {
        "contact": {
            "email": "apiteam@swagger.io"
        },
        "description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "termsOfService": "http://swagger.io/terms/",
        "title": "Swagger Petstore",
        "version": "1.0.5"
    },
    "paths": {
        "/pet/{petId}": {
            "delete": {
                "description": "",
                "operationId": "deletePet",
                "parameters": [
                    {
                        "in": "header",
                        "name": "api_key",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Pet id to delete",
                        "format": "int64",
                        "in": "path",
                        "name": "petId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Pet not found"
                    }
                },
                "security": [
                    {
                        "petstore_auth": [
                            "write:pets",
                            "read:pets"
                        ]
                    }
                ],
                "summary": "Deletes a pet",
                "tags": [
                    "pet"
                ]
            },
            "get": {
                "description": "Returns a single pet",
                "operationId": "getPetById",
                "parameters": [
                    {
                        "description": "ID of pet to return",
                        "format": "int64",
                        "in": "path",
                        "name": "petId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Pet"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Pet not found"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Find pet by ID",
                "tags": [
                    "pet"
                ]
            },
            "post": {
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "description": "",
                "operationId": "updatePetWithForm",
                "parameters": [
                    {
                        "description": "ID of pet that needs to be updated",
                        "format": "int64",
                        "in": "path",
                        "name": "petId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Updated name of the pet",
                        "in": "formData",
                        "name": "name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Updated status of the pet",
                        "in": "formData",
                        "name": "status",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "petstore_auth": [
                            "write:pets",
                            "read:pets"
                        ]
                    }
                ],
                "summary": "Updates a pet in the store with form data",
                "tags": [
                    "pet"
                ]
            }
        }
    },
    "schemes": [
        "https",
        "http"
    ],
    "securityDefinitions": {
        "api_key": {
            "in": "header",
            "name": "api_key",
            "type": "apiKey"
        },
        "petstore_auth": {
            "authorizationUrl": "https://petstore.swagger.io/oauth/authorize",
            "flow": "implicit",
            "scopes": {
                "read:pets": "read your pets",
                "write:pets": "modify pets in your account"
            },
            "type": "oauth2"
        }
    },
    "swagger": "2.0",
    "tags": [
        {
            "description": "Everything about your Pets",
            "externalDocs": {
                "description": "Find out more",
                "url": "http://swagger.io"
            },
            "name": "pet"
        },
        {
            "description": "Access to Petstore orders",
            "name": "store"
        },
        {
            "description": "Operations about user",
            "externalDocs": {
                "description": "Find out more about our store",
                "url": "http://swagger.io"
            },
            "name": "user"
        }
    ]
}
