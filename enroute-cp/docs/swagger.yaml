definitions:
  webhttp.FilterConfig:
    properties:
      filter_config:
        type: string
      filter_name:
        type: string
      filter_type:
        type: string
    type: object
  webhttp.Proxy:
    properties:
      name:
        type: string
    type: object
  webhttp.Route:
    properties:
      route_config:
        description: Route_config holds configuration in json. Use this config if
          present. Else, fallback to individual fields above
        type: string
      route_name:
        type: string
      route_prefix:
        type: string
    type: object
  webhttp.Secret:
    properties:
      secret_cert:
        type: string
      secret_config:
        description: Secret_config holds configuration in json. Use this config if
          present. Else, fallback to individual fields above
        type: string
      secret_key:
        type: string
      secret_name:
        type: string
      secret_sni:
        type: string
    type: object
  webhttp.Service:
    properties:
      fqdn:
        type: string
      service_config:
        description: Service_config holds configuration in json. Use this config if
          present. Else, fallback to individual fields above
        type: string
      service_name:
        type: string
    type: object
  webhttp.Upstream:
    properties:
      upstream_config:
        description: Upstream_config holds configuration in json. Use this config
          if present. Else, fallback to individual fields above
        type: string
      upstream_hc_healthythresholdcount:
        type: string
      upstream_hc_host:
        type: string
      upstream_hc_intervalseconds:
        type: string
      upstream_hc_path:
        type: string
      upstream_hc_timeoutseconds:
        type: string
      upstream_hc_unhealthythresholdcount:
        type: string
      upstream_ip:
        type: string
      upstream_name:
        type: string
      upstream_port:
        type: string
      upstream_protocol:
        type: string
      upstream_strategy:
        type: string
      upstream_validation_cacertificate:
        type: string
      upstream_validation_subjectname:
        type: string
      upstream_weight:
        type: string
    type: object
info:
  contact:
    name: contact@saaras.io
    url: https://saaras.io/
  description: APIs to configure multiple envoy proxies
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Enroute API
  version: "1.0"
paths:
  /filter:
    get:
      consumes:
      - application/json
      description: Get all filters in db
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Get all filters in db
      tags:
      - filter
    post:
      consumes:
      - application/json
      description: Create filter
      parameters:
      - description: Name of filter to create
        in: body
        name: Name
        required: true
        schema:
          $ref: '#/definitions/webhttp.FilterConfig'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Create filter
      tags:
      - filter
  /filter/:
    patch:
      consumes:
      - application/json
      description: Update filter config - update filter type
      parameters:
      - description: Name of filter_name for which to list config
        in: path
        name: filter_name
        required: true
        type: string
      - description: Name of filter to create
        in: body
        name: Name
        required: true
        schema:
          $ref: '#/definitions/webhttp.FilterConfig'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Update filter config - update filter type
      tags:
      - filter
    post:
      consumes:
      - application/json
      description: Set filter config from file
      parameters:
      - description: Name of filter_name for which to list config
        in: path
        name: filter_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Set filter config from file
      tags:
      - filter
  /filter/{filter_name}:
    delete:
      consumes:
      - application/json
      description: Delete filter config
      parameters:
      - description: Name of filter_name for which to list config
        in: path
        name: filter_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Delete filter config
      tags:
      - filter
    get:
      consumes:
      - application/json
      description: Get filters detail for provided name
      parameters:
      - description: Name of filter_name for which to list config
        in: path
        name: filter_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Get filters detail for provided name
      tags:
      - filter
  /globalconfig:
    get:
      consumes:
      - application/json
      description: Get all globalconfigs in db
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Get all globalconfigs in db
      tags:
      - globalconfig
    post:
      consumes:
      - application/json
      description: Create globalconfig
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Create globalconfig
      tags:
      - globalconfig
  /globalconfig/{globalconfig_name}:
    delete:
      consumes:
      - application/json
      description: Delete globalconfig
      parameters:
      - description: Name of globalconfig_name for which to list config
        in: path
        name: globalconfig_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Delete globalconfig
      tags:
      - globalconfig
    get:
      consumes:
      - application/json
      description: Get globalconfigs for provided name
      parameters:
      - description: Name of globalconfig_name for which to list config
        in: path
        name: globalconfig_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Get globalconfigs for provided name
      tags:
      - globalconfig
    patch:
      consumes:
      - application/json
      description: Update globalconfig type
      parameters:
      - description: Name of globalconfig_name for which to list config
        in: path
        name: globalconfig_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Update globalconfig type
      tags:
      - globalconfig
  /globalconfig/{globalconfig_name}/config:
    post:
      consumes:
      - application/json
      description: Set globalconfig from file
      parameters:
      - description: Name of globalconfig_name for which to list config
        in: path
        name: globalconfig_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Set globalconfig from file
      tags:
      - globalconfig
  /proxy:
    get:
      consumes:
      - application/json
      description: Get a list of all proxies
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: List proxies
      tags:
      - proxy
    post:
      consumes:
      - application/json
      description: Create a proxy
      parameters:
      - description: Name of proxy to create
        in: body
        name: Name
        required: true
        schema:
          $ref: '#/definitions/webhttp.Proxy'
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Create a proxy
      tags:
      - proxy
  /proxy/{proxy_name}:
    delete:
      consumes:
      - application/json
      description: Delete a proxy
      parameters:
      - description: Name of proxy to delete
        in: path
        name: proxy_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Delete a proxy
      tags:
      - proxy
    get:
      consumes:
      - application/json
      description: Get information about a proxy
      parameters:
      - description: Name of proxy to delete
        in: path
        name: proxy_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Get information about a proxy
      tags:
      - proxy
  /proxy/{proxy_name}/globalconfig/{globalconfig_name}:
    delete:
      consumes:
      - application/json
      description: Disassociate a globalconfig from proxy
      parameters:
      - description: Name of proxy
        in: path
        name: proxy_name
        required: true
        type: string
      - description: Name of globalconfig
        in: path
        name: globalconfig_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Disassociate a globalconfig from proxy
      tags:
      - proxy
    get:
      consumes:
      - application/json
      description: Return specified globalconfig associated with this proxy
      parameters:
      - description: Name of proxy for which to list service
        in: path
        name: proxy_name
        required: true
        type: string
      - description: Name of globalconfig to list
        in: path
        name: globalconfig_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Return specified globalconfig associated with this proxy
      tags:
      - proxy
    post:
      consumes:
      - application/json
      description: Associate a globalconfig with proxy
      parameters:
      - description: Name of proxy
        in: path
        name: proxy_name
        required: true
        type: string
      - description: Name of globalconfig
        in: path
        name: globalconfig_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Associate a globalconfig with proxy
      tags:
      - proxy
  /proxy/{proxy_name}/service:
    get:
      consumes:
      - application/json
      description: Get all services associated with a proxy
      parameters:
      - description: Name of proxy for which to list services
        in: path
        name: proxy_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: List services associated with proxy
      tags:
      - proxy
  /proxy/{proxy_name}/service/{service_name}:
    delete:
      consumes:
      - application/json
      description: Disassociate a service from proxy
      parameters:
      - description: Name of proxy for which to list service
        in: path
        name: proxy_name
        required: true
        type: string
      - description: Name of service to list
        in: path
        name: service_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Disassociate a service from proxy
      tags:
      - proxy
    get:
      consumes:
      - application/json
      description: Return specified service associated with this proxy
      parameters:
      - description: Name of proxy for which to list service
        in: path
        name: proxy_name
        required: true
        type: string
      - description: Name of service to list
        in: path
        name: service_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Return specified service associated with this proxy
      tags:
      - proxy
    post:
      consumes:
      - application/json
      description: Associate a service with proxy
      parameters:
      - description: Name of proxy for which to list service
        in: path
        name: proxy_name
        required: true
        type: string
      - description: Name of service to list
        in: path
        name: service_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Associate a service with proxy
      tags:
      - proxy
  /proxy/dump:
    get:
      consumes:
      - application/json
      description: Get a detailed version of list of proxies
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Get all proxy details
      tags:
      - proxy
      - operational-verbs
  /proxy/dump/{proxy_name}:
    get:
      consumes:
      - application/json
      description: Get a detailed version of specified proxy
      parameters:
      - description: Name of proxy for which to list services
        in: path
        name: proxy_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Get details of specified proxy
      tags:
      - proxy
      - operational-verbs
  /secret:
    get:
      consumes:
      - application/json
      description: Get a list of all secrets for all services
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: List all secrets
      tags:
      - secret
    post:
      consumes:
      - application/json
      parameters:
      - description: Secret to create
        in: body
        name: Secret
        required: true
        schema:
          $ref: '#/definitions/webhttp.Secret'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Create a secret
      tags:
      - secret
  /secret/{secret_name}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Name of secret
        in: path
        name: secret_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Delete a secret
      tags:
      - secret
  /secret/{secret_name}/cert:
    post:
      consumes:
      - application/json
      description: |-
        Set the secret cert from file
        Example curl -X POST -F 'Secret_cert=@certificate.pem' http://localhost:1323/secret/testsecret/cert | python -m json.tool
      parameters:
      - description: Name of secret
        in: path
        name: secret_name
        required: true
        type: string
      - description: Location of file holding the secret cert
        in: formData
        name: secret_cert
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Set the secret cert from file
      tags:
      - secret
  /secret/{secret_name}/key:
    post:
      consumes:
      - application/json
      description: |-
        Set the secret key from file
        Example curl -X POST -F 'Secret_key=@private_key.pem' http://localhost:1323/secret/testsecret/key | python -m json.tool
      parameters:
      - description: Name of secret
        in: path
        name: secret_name
        required: true
        type: string
      - description: Location of file holding the secret key
        in: formData
        name: secret_key
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Set the secret key from file
      tags:
      - secret
  /service:
    get:
      consumes:
      - application/json
      description: Get a list of all services for all proxies
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: List all services
      tags:
      - service
    post:
      consumes:
      - application/json
      description: Create a service
      parameters:
      - description: Service to create
        in: body
        name: Service
        required: true
        schema:
          $ref: '#/definitions/webhttp.Service'
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Create a service
      tags:
      - service
  /service/{service_name}:
    delete:
      consumes:
      - application/json
      description: Delete specified service
      parameters:
      - description: Name of service
        in: path
        name: service_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Delete the specified service
      tags:
      - service
    get:
      consumes:
      - application/json
      description: Fetch some details of specified service
      parameters:
      - description: Name of service
        in: path
        name: service_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Fetch some details of specified service
      tags:
      - service
    patch:
      consumes:
      - application/json
      description: Update a service
      parameters:
      - description: Fields of service to update
        in: body
        name: Service
        required: true
        schema:
          $ref: '#/definitions/webhttp.Service'
          type: object
      - description: name of service to update
        in: path
        name: service_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Update a service
      tags:
      - service
  /service/{service_name}/filter:
    get:
      consumes:
      - application/json
      description: Return filters associated with a service
      parameters:
      - description: Name of service
        in: path
        name: service_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Return filters associated with a service
      tags:
      - filter
  /service/{service_name}/filter/{filter_name}:
    delete:
      consumes:
      - application/json
      description: Delete filter associated with a service
      parameters:
      - description: Name of service
        in: path
        name: service_name
        required: true
        type: string
      - description: Name of filter for route
        in: path
        name: filter_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Delete filter associated with a service
      tags:
      - filter
    get:
      consumes:
      - application/json
      description: Return filter associated with a service
      parameters:
      - description: Name of service
        in: path
        name: service_name
        required: true
        type: string
      - description: Name of filter
        in: path
        name: filter_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Return filter associated with a service
      tags:
      - filter
    post:
      consumes:
      - application/json
      description: Associate a filter with service
      parameters:
      - description: Name of service
        in: path
        name: service_name
        required: true
        type: string
      - description: Name of filter
        in: path
        name: filter_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Associate a filter with service
      tags:
      - filter service
  /service/{service_name}/proxy:
    get:
      consumes:
      - application/json
      description: Fetch list of proxies on which this service is programmed
      parameters:
      - description: Name of service
        in: path
        name: service_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Fetch list of proxies on which this service is programmed
      tags:
      - service
      - proxy
  /service/{service_name}/route:
    get:
      consumes:
      - application/json
      description: Get all routes for a service
      parameters:
      - description: Name of service
        in: path
        name: service_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Get all routes for a service
      tags:
      - service
      - route
    post:
      consumes:
      - application/json
      description: Create a route associated with a service
      parameters:
      - description: Name of service
        in: path
        name: service_name
        required: true
        type: string
      - description: Route to create
        in: body
        name: Route
        required: true
        schema:
          $ref: '#/definitions/webhttp.Route'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Create a route associated with a service
      tags:
      - service
      - route
  /service/{service_name}/route/{route_name}:
    get:
      consumes:
      - application/json
      description: Delete the route associated with the service
      parameters:
      - description: Name of service
        in: path
        name: service_name
        required: true
        type: string
      - description: Name of route to delete
        in: path
        name: route_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Delete the route associated with the service
      tags:
      - service
      - route
    patch:
      consumes:
      - application/json
      description: Update a route associated with a service
      parameters:
      - description: Name of service
        in: path
        name: service_name
        required: true
        type: string
      - description: Name of service
        in: path
        name: route_name
        required: true
        type: string
      - description: Route to update
        in: body
        name: Route
        required: true
        schema:
          $ref: '#/definitions/webhttp.Route'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Update a route associated with a service
      tags:
      - service
      - route
  /service/{service_name}/route/{route_name}/filter:
    get:
      consumes:
      - application/json
      description: Return filters associated with a service route
      parameters:
      - description: Name of service for route
        in: path
        name: service_name
        required: true
        type: string
      - description: Name of route for service
        in: path
        name: route_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Return filters associated with a service route
      tags:
      - filter
  /service/{service_name}/route/{route_name}/filter/{filter_name}:
    delete:
      consumes:
      - application/json
      description: Delete filter associated with a service route
      parameters:
      - description: Name of service
        in: path
        name: service_name
        required: true
        type: string
      - description: Name of route for service
        in: path
        name: route_name
        required: true
        type: string
      - description: Name of filter for route
        in: path
        name: filter_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Delete filter associated with a service route
      tags:
      - filter
    get:
      consumes:
      - application/json
      description: Return filter associated with a service route
      parameters:
      - description: Name of service for route
        in: path
        name: service_name
        required: true
        type: string
      - description: Name of route for service
        in: path
        name: route_name
        required: true
        type: string
      - description: Name of filter for route
        in: path
        name: filter_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Return filter associated with a service route
      tags:
      - filter
    post:
      consumes:
      - application/json
      description: Associate a filter with route
      parameters:
      - description: Name of service
        in: path
        name: service_name
        required: true
        type: string
      - description: Name of route
        in: path
        name: route_name
        required: true
        type: string
      - description: Name of filter
        in: path
        name: filter_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Associate a filter with route
      tags:
      - filter route
  /service/{service_name}/route/{route_name}/upstream:
    get:
      consumes:
      - application/json
      description: Get all upstreams associated with a service route
      parameters:
      - description: Name of service
        in: path
        name: service_name
        required: true
        type: string
      - description: Name of route
        in: path
        name: route_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Get all upstreams associated with a service route
      tags:
      - service
      - route
      - upstream
  /service/{service_name}/route/{route_name}/upstream/{upstream_name}:
    get:
      consumes:
      - application/json
      description: Disassociate an upstream with a service route. This does not delete
        the upstream.
      parameters:
      - description: Name of service
        in: path
        name: service_name
        required: true
        type: string
      - description: Name of route
        in: path
        name: route_name
        required: true
        type: string
      - description: Name of upstream to disassociate with service route
        in: path
        name: upstream_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Disassociate an upstream with a service route
      tags:
      - service
      - route
      - upstream
  /service/{service_name}/secret:
    get:
      consumes:
      - application/json
      description: List all secrets associated with a service
      parameters:
      - description: Name of service
        in: path
        name: service_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: List all secrets associated with a service
      tags:
      - service
      - secret
  /service/{service_name}/secret/{secret_name}:
    delete:
      consumes:
      - application/json
      description: Disassociate a secret with a service
      parameters:
      - description: Name of service
        in: path
        name: service_name
        required: true
        type: string
      - description: Name of secret
        in: path
        name: secret_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Disassociate a secret with a service
      tags:
      - service
      - secret
    post:
      consumes:
      - application/json
      description: Associate a secret with a service
      parameters:
      - description: Name of service
        in: path
        name: service_name
        required: true
        type: string
      - description: Name of secret
        in: path
        name: secret_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Associate a secret with a service
      tags:
      - service
      - secret
  /service/copy/{service_name_src}/{service_name_dst}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Name of service
        in: path
        name: service_name_src
        required: true
        type: string
      - description: Name of service
        in: path
        name: service_name_dst
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Copy service
      tags:
      - service
      - operational-verbs
  /service/copyroute/{service_name_src}/{service_name_dst}/route/{route_name}:
    post:
      consumes:
      - application/json
      description: Copy a route on source service to a destination service
      parameters:
      - description: Name of service
        in: path
        name: service_name_src
        required: true
        type: string
      - description: Name of service
        in: path
        name: service_name_dst
        required: true
        type: string
      - description: Name of service
        in: path
        name: route_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Copy a route on source service to a destination service
      tags:
      - service
      - route
      - operational-verbs
  /service/deepcopy/{service_name_src}/{service_name_dst}:
    post:
      consumes:
      - application/json
      description: Deep copy service copies service, associated routes and upstream
        associations. Upstream copies are not created.
      parameters:
      - description: Name of service
        in: path
        name: service_name_src
        required: true
        type: string
      - description: Name of service
        in: path
        name: service_name_dst
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Deep copy service
      tags:
      - service
      - route
      - operational-verbs
  /service/dump/{service_name}:
    get:
      consumes:
      - application/json
      description: Fetch detail of specified service
      parameters:
      - description: Name of service
        in: path
        name: service_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Fetch detail of specified service
      tags:
      - service
      - operational-verbs
  /status/{status}:
    get:
      consumes:
      - application/json
      description: Get status of HTTP service
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Get status
      tags:
      - service
  /upstream:
    get:
      consumes:
      - application/json
      description: Get a list of all upstreams
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: List all upstreams
      tags:
      - upstream
    post:
      consumes:
      - application/json
      parameters:
      - description: Upstream to create
        in: body
        name: Upstream
        required: true
        schema:
          $ref: '#/definitions/webhttp.Upstream'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Create an upstream
      tags:
      - upstream
  /upstream/{upstream_name}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Name of upstream to delete
        in: path
        name: upstream_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Delete an upstream
      tags:
      - upstream
    get:
      consumes:
      - application/json
      parameters:
      - description: Name of upstream to delete
        in: path
        name: upstream_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Get info of an upstream
      tags:
      - upstream
    patch:
      consumes:
      - application/json
      parameters:
      - description: Upstream to update
        in: body
        name: Upstream
        required: true
        schema:
          $ref: '#/definitions/webhttp.Upstream'
          type: object
      - description: Name of upstream to update
        in: path
        name: upstream_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Update an upstream
      tags:
      - upstream
  /upstream/{upstream_name}/route:
    get:
      consumes:
      - application/json
      parameters:
      - description: Name of upstream
        in: path
        name: upstream_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Get routes to which this upstream is associated
      tags:
      - upstream
      - route
  /upstream/copy/{upstream_name_src}/{upstream_name_dst}:
    get:
      consumes:
      - application/json
      description: Make a copy from upstream_name_src to upstream_name_dst
      parameters:
      - description: Name of upstream
        in: path
        name: upstream_name_src
        required: true
        type: string
      - description: Name of upstream
        in: path
        name: upstream_name_dst
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: number
      security:
      - ApiKeyAuth: []
      summary: Copy an upstream
      tags:
      - upstream
      - operational-verbs
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
