// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-09-13 18:59:52.85007371 +0000 UTC m=+0.030832542

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "https://saaras.io/"
        },
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/proxy": {
            "get": {
                "description": "Get a list of all proxies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "proxy"
                ],
                "summary": "List proxies",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": ""
                        }
                    }
                }
            },
            "post": {
                "description": "Create a proxy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "proxy"
                ],
                "summary": "Create a proxy",
                "parameters": [
                    {
                        "description": "Name of proxy to create",
                        "name": "Name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/webhttp.Proxy"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": ""
                        }
                    }
                }
            }
        },
        "/proxy/dump": {
            "get": {
                "description": "Get a detailed version of list of proxies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "proxy"
                ],
                "summary": "Get all proxy details",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": ""
                        }
                    }
                }
            }
        },
        "/proxy/dump/{proxy_name}": {
            "get": {
                "description": "Get a detailed version of specified proxy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "proxy"
                ],
                "summary": "Get details of specified proxy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of proxy for which to list services",
                        "name": "proxy_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": ""
                        }
                    }
                }
            }
        },
        "/proxy/{proxy_name}": {
            "delete": {
                "description": "Delete a proxy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "proxy"
                ],
                "summary": "Delete a proxy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of proxy to delete",
                        "name": "proxy_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": ""
                        }
                    }
                }
            }
        },
        "/proxy/{proxy_name}/service": {
            "get": {
                "description": "Get all services associated with a proxy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "proxy"
                ],
                "summary": "List services associated with proxy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of proxy for which to list services",
                        "name": "proxy_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": ""
                        }
                    }
                }
            }
        },
        "/proxy/{proxy_name}/service/{service_name}": {
            "get": {
                "description": "Return specified service associated with this proxy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "proxy"
                ],
                "summary": "Return specified service associated with this proxy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of proxy for which to list service",
                        "name": "proxy_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of service to list",
                        "name": "service_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": ""
                        }
                    }
                }
            },
            "post": {
                "description": "Associate a service with proxy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "proxy"
                ],
                "summary": "Associate a service with proxy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of proxy for which to list service",
                        "name": "proxy_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of service to list",
                        "name": "service_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": ""
                        }
                    }
                }
            },
            "delete": {
                "description": "Disassociate a service from proxy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "proxy"
                ],
                "summary": "Disassociate a service from proxy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of proxy for which to list service",
                        "name": "proxy_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of service to list",
                        "name": "service_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": ""
                        }
                    }
                }
            }
        },
        "/service": {
            "get": {
                "description": "Get a list of all services for all proxies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "List all services",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": ""
                        }
                    }
                }
            },
            "post": {
                "description": "Create a service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "Create a service",
                "parameters": [
                    {
                        "description": "Service to create",
                        "name": "Name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/webhttp.Service"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": ""
                        }
                    }
                }
            }
        },
        "/service/{service_name}": {
            "get": {
                "description": "Fetch some details of specified service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "Fetch some details of specified service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of service",
                        "name": "service_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": ""
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete specified service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "Delete the specified service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of service",
                        "name": "service_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": ""
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "Update a service",
                "parameters": [
                    {
                        "description": "Fields of service to update",
                        "name": "Service",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/webhttp.Service"
                        }
                    },
                    {
                        "type": "string",
                        "description": "name of service to update",
                        "name": "service_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": ""
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "webhttp.Proxy": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "webhttp.Service": {
            "type": "object",
            "properties": {
                "fqdn": {
                    "type": "string"
                },
                "service_name": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "Enroute API",
	Description: "APIs to configure multiple envoy proxies",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
