---
apiVersion: enroute.saaras.io/v1beta1
kind: GatewayHost
metadata:
  labels:
    app: hello-enroute
  name: {{ .Values.service.name }}-gatewayhost-notls
  namespace: enroutedemo
spec:
  virtualhost:
    {{- if .Values.service.fqdn -}}
    #
    fqdn: {{ .Values.service.fqdn }}
    {{- else }}
    fqdn: '*'
    {{- end }}
    #
    {{- if .Values.filters.lua.enable -}}
    #
    filters:
      - name: luatestfilter
        type: http_filter_lua
    {{- end }}
  routes:
    - conditions:
      - prefix: /
        header:
          name: ":method"
          exact: "GET"
      {{- if .Values.filters.ratelimit.enable -}}
      #
      filters:
        - name: rl2
          type: route_filter_ratelimit
      {{- end }}
      services:
        - name: {{ .Values.service.name }}
          port: {{ .Values.service.port }}
---
apiVersion: enroute.saaras.io/v1beta1
kind: GlobalConfig
metadata:
  labels:
    app: hello-enroute
  name: rl-global-config
  namespace: enroutedemo
spec:
  name: rl-global-config
  type: globalconfig_ratelimit
  config: |
        {
          "domain": "enroute",
          "descriptors" :
          [
            {
              "key": "x-forwarded-for",
              "descriptors" :
              [
                {
                  "key" : "x-forwarded-proto",
                  "value" : "http",
                  "rate_limit" : { "unit" : "second", "requests_per_unit" : 2 }
                }
              ]
            }
          ]
        }
---
apiVersion: enroute.saaras.io/v1beta1
kind: RouteFilter
metadata:
  labels:
    app: hello-enroute
  name: rl2
  namespace: enroutedemo
spec:
  name: rl2
  type: route_filter_ratelimit
  routeFilterConfig:
    config: |
          { 
            "descriptors" : 
            [ 
              { "request_headers": { "header_name": "x-forwarded-for", "descriptor_key": "x-forwarded-for" } },
              { "request_headers": { "header_name": "x-forwarded-proto", "descriptor_key": "x-forwarded-proto" } }
            ]
          }
---
apiVersion: enroute.saaras.io/v1beta1
kind: HttpFilter
metadata:
  labels:
    app: hello-enroute
  name: luatestfilter
  namespace: enroutedemo
spec:
  name: luatestfilter
  type: http_filter_lua
  httpFilterConfig:
    config: |
        function envoy_on_request(request_handle)
           request_handle:logInfo("Hello World request");
        end

        function envoy_on_response(response_handle)
           response_handle:logInfo("Hello World response");
        end
---
