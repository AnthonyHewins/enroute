{{- if .Values.autoTLS.issueCert }}
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ .Values.service.name }}-{{ .Values.autoTLS.certificateCN }}
  namespace: {{ .Values.globalSettings.namespace.name }}
spec:
  commonName: {{ .Values.service.certificateCN }}
  dnsNames:
  - {{ .Values.autoTLS.certificateCN }}
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  secretName: {{ .Values.service.name }}-{{ .Values.autoTLS.certificateCN }}-secret
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging
  namespace: cert-manager
spec:
  acme:
    email: contact@universalapigateway.com
    privateKeySecretRef:
      name: letsencrypt-staging
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    solvers:
    - http01:
        ingress:
          class: enroute
      selector: {}
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
  namespace: cert-manager
spec:
  acme:
    email: contact@universalapigateaway.com
    privateKeySecretRef:
      name: letsencrypt-prod
    server: https://acme-v02.api.letsencrypt.org/directory
    solvers:
    - http01:
        ingress:
          class: enroute
      selector: {}
---
apiVersion: v1
kind: Service
metadata:
  name: acme-challenge-service
  namespace: {{ .Values.globalSettings.namespace.name }}
spec:
  ports:
  - port: 80
    targetPort: 8089
  selector:
    acme.cert-manager.io/http01-solver: "true"
---
apiVersion: enroute.saaras.io/v1beta1
kind: GatewayHost
metadata:
  labels:
    app: hello-enroute
  name: {{ .Values.service.name }}-{{ .Values.autoTLS.certificateCN }}-gatewayhost
  namespace: {{ .Values.globalSettings.namespace.name }}
spec:
  virtualhost:
    fqdn: {{ quote .Values.autoTLS.certificateCN }}
    {{- if .Values.service.enableTLS }}
    tls:
      secretName: {{ .Values.service.name }}-{{ .Values.autoTLS.certificateCN }}-secret
    {{- end }}
    {{- if .Values.filters.lua.enable }}
    filters:
      - name: luatestfilter
        type: http_filter_lua
    {{- end }}
    {{- if .Values.filters.cors.enable }}
      - name: corsfilter
        type: http_filter_cors
    {{- end }}
    {{- if .Values.filters.jwt.enable }}
      - name: jwtfilter
        type: http_filter_jwt
    {{- end }}
  routes:
    - conditions:
      - prefix: /.well-known/acme-challenge/
        header:
          name: ":method"
          exact: "GET"
      services:
        - name: acme-challenge-service
          port: 80
    - conditions:
      - prefix: /
        header:
          name: ":method"
          exact: "GET"
      {{- if .Values.filters.ratelimit.enable }}
      filters:
        - name: rl2
          type: route_filter_ratelimit
      {{- end }}
      services:
        - name: {{ .Values.service.name }}
          port: {{ .Values.service.port }}
---
{{- end }}
